{"version":3,"sources":["KickCountMonitor.js","App.js","reportWebVitals.js","index.js"],"names":["KickCountMonitor","isActive","setIsActive","useState","kickCount","setKickCount","elapsedTime","setElapsedTime","useEffect","interval","setInterval","prevTime","clearInterval","React","createElement","style","maxWidth","margin","padding","fontFamily","border","borderRadius","textAlign","fontSize","marginBottom","fontWeight","seconds","mins","Math","floor","secs","concat","toString","padStart","formatTime","display","justifyContent","gap","onClick","handleStart","backgroundColor","color","cursor","Fragment","handleKick","prevCount","handleStop","handleReset","marginTop","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8961209e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst KickCountMonitor = () => {\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [kickCount, setKickCount] = useState(0);\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (isActive) {\r\n      interval = setInterval(() => {\r\n        setElapsedTime((prevTime) => prevTime + 1);\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isActive]);\r\n\r\n  const handleStart = () => {\r\n    setIsActive(true);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    setIsActive(false);\r\n  };\r\n\r\n  const handleKick = () => {\r\n    if (isActive && kickCount < 10) {\r\n      setKickCount((prevCount) => prevCount + 1);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setIsActive(false);\r\n    setKickCount(0);\r\n    setElapsedTime(0);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '400px', margin: '0 auto', padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <div style={{ border: '1px solid #ccc', borderRadius: '8px', padding: '20px' }}>\r\n        <h2 style={{ textAlign: 'center', fontSize: '24px', marginBottom: '20px' }}>Kick Count Monitor</h2>\r\n        <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n          <p style={{ fontSize: '48px', fontWeight: 'bold', margin: '0' }}>{kickCount}</p>\r\n          <p>Kicks Counted</p>\r\n        </div>\r\n        <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n          <p style={{ fontSize: '24px', fontWeight: 'bold' }}>{formatTime(elapsedTime)}</p>\r\n          <p>Time Elapsed</p>\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'center', gap: '10px', marginBottom: '20px' }}>\r\n          {!isActive && kickCount === 0 && (\r\n            <button onClick={handleStart} style={{ backgroundColor: '#4CAF50', color: 'white', padding: '10px 20px', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>\r\n              Start\r\n            </button>\r\n          )}\r\n          {isActive && (\r\n            <>\r\n              <button onClick={handleKick} style={{ backgroundColor: '#2196F3', color: 'white', padding: '10px 20px', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>\r\n                Record Kick\r\n              </button>\r\n              <button onClick={handleStop} style={{ backgroundColor: '#f44336', color: 'white', padding: '10px 20px', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>\r\n                Stop\r\n              </button>\r\n            </>\r\n          )}\r\n          {!isActive && kickCount > 0 && (\r\n            <button onClick={handleReset} style={{ backgroundColor: '#9E9E9E', color: 'white', padding: '10px 20px', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>\r\n              Reset\r\n            </button>\r\n          )}\r\n        </div>\r\n        {kickCount >= 10 && (\r\n          <div style={{ backgroundColor: '#DFF2BF', color: '#4F8A10', padding: '10px', borderRadius: '5px', marginTop: '20px' }}>\r\n            <p style={{ fontWeight: 'bold', margin: '0 0 5px 0' }}>Great job!</p>\r\n            <p style={{ margin: '0' }}>You've recorded 10 kicks. Your baby's activity is normal.</p>\r\n          </div>\r\n        )}\r\n        {elapsedTime >= 3600 && kickCount < 10 && (\r\n          <div style={{ backgroundColor: '#FEEFB3', color: '#9F6000', padding: '10px', borderRadius: '5px', marginTop: '20px' }}>\r\n            <p style={{ fontWeight: 'bold', margin: '0 0 5px 0' }}>Attention needed</p>\r\n            <p style={{ margin: '0' }}>It's been an hour and you've recorded less than 10 kicks. Please contact your healthcare provider.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KickCountMonitor;","import React from 'react';\nimport KickCountMonitor from './KickCountMonitor';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Kick Count Monitor</h1>\n      </header>\n      <main>\n        <KickCountMonitor />\n      </main>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}